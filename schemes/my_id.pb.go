// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.18.0--rc2
// source: my_id.proto

package schemes

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type IDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DC        uint32 `protobuf:"varint,1,opt,name=DC,proto3" json:"DC,omitempty"`
	WorkerId  uint64 `protobuf:"varint,2,opt,name=worker_id,json=workerId,proto3" json:"worker_id,omitempty"`
	RequestId uint64 `protobuf:"varint,3,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
}

func (x *IDRequest) Reset() {
	*x = IDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_my_id_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IDRequest) ProtoMessage() {}

func (x *IDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_my_id_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IDRequest.ProtoReflect.Descriptor instead.
func (*IDRequest) Descriptor() ([]byte, []int) {
	return file_my_id_proto_rawDescGZIP(), []int{0}
}

func (x *IDRequest) GetDC() uint32 {
	if x != nil {
		return x.DC
	}
	return 0
}

func (x *IDRequest) GetWorkerId() uint64 {
	if x != nil {
		return x.WorkerId
	}
	return 0
}

func (x *IDRequest) GetRequestId() uint64 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

type IDReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Timestamp uint64 `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	ReplyId   uint64 `protobuf:"varint,3,opt,name=reply_id,json=replyId,proto3" json:"reply_id,omitempty"`
}

func (x *IDReply) Reset() {
	*x = IDReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_my_id_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IDReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IDReply) ProtoMessage() {}

func (x *IDReply) ProtoReflect() protoreflect.Message {
	mi := &file_my_id_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IDReply.ProtoReflect.Descriptor instead.
func (*IDReply) Descriptor() ([]byte, []int) {
	return file_my_id_proto_rawDescGZIP(), []int{1}
}

func (x *IDReply) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *IDReply) GetTimestamp() uint64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *IDReply) GetReplyId() uint64 {
	if x != nil {
		return x.ReplyId
	}
	return 0
}

var File_my_id_proto protoreflect.FileDescriptor

var file_my_id_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x6d, 0x79, 0x5f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x73,
	0x63, 0x68, 0x65, 0x6d, 0x65, 0x73, 0x22, 0x57, 0x0a, 0x09, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x44, 0x43, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x02, 0x44, 0x43, 0x12, 0x1b, 0x0a, 0x09, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x22,
	0x52, 0x0a, 0x07, 0x49, 0x44, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x65, 0x70, 0x6c,
	0x79, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x72, 0x65, 0x70, 0x6c,
	0x79, 0x49, 0x64, 0x32, 0x3c, 0x0a, 0x04, 0x4d, 0x79, 0x49, 0x44, 0x12, 0x34, 0x0a, 0x0a, 0x47,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x49, 0x44, 0x12, 0x12, 0x2e, 0x73, 0x63, 0x68, 0x65,
	0x6d, 0x65, 0x73, 0x2e, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e,
	0x73, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x73, 0x2e, 0x49, 0x44, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x00, 0x42, 0x0a, 0x5a, 0x08, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x73, 0x2f, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_my_id_proto_rawDescOnce sync.Once
	file_my_id_proto_rawDescData = file_my_id_proto_rawDesc
)

func file_my_id_proto_rawDescGZIP() []byte {
	file_my_id_proto_rawDescOnce.Do(func() {
		file_my_id_proto_rawDescData = protoimpl.X.CompressGZIP(file_my_id_proto_rawDescData)
	})
	return file_my_id_proto_rawDescData
}

var file_my_id_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_my_id_proto_goTypes = []interface{}{
	(*IDRequest)(nil), // 0: schemes.IDRequest
	(*IDReply)(nil),   // 1: schemes.IDReply
}
var file_my_id_proto_depIdxs = []int32{
	0, // 0: schemes.MyID.GenerateID:input_type -> schemes.IDRequest
	1, // 1: schemes.MyID.GenerateID:output_type -> schemes.IDReply
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_my_id_proto_init() }
func file_my_id_proto_init() {
	if File_my_id_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_my_id_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_my_id_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IDReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_my_id_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_my_id_proto_goTypes,
		DependencyIndexes: file_my_id_proto_depIdxs,
		MessageInfos:      file_my_id_proto_msgTypes,
	}.Build()
	File_my_id_proto = out.File
	file_my_id_proto_rawDesc = nil
	file_my_id_proto_goTypes = nil
	file_my_id_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// MyIDClient is the client API for MyID service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MyIDClient interface {
	GenerateID(ctx context.Context, in *IDRequest, opts ...grpc.CallOption) (*IDReply, error)
}

type myIDClient struct {
	cc grpc.ClientConnInterface
}

func NewMyIDClient(cc grpc.ClientConnInterface) MyIDClient {
	return &myIDClient{cc}
}

func (c *myIDClient) GenerateID(ctx context.Context, in *IDRequest, opts ...grpc.CallOption) (*IDReply, error) {
	out := new(IDReply)
	err := c.cc.Invoke(ctx, "/schemes.MyID/GenerateID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MyIDServer is the server API for MyID service.
type MyIDServer interface {
	GenerateID(context.Context, *IDRequest) (*IDReply, error)
}

// UnimplementedMyIDServer can be embedded to have forward compatible implementations.
type UnimplementedMyIDServer struct {
}

func (*UnimplementedMyIDServer) GenerateID(context.Context, *IDRequest) (*IDReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GenerateID not implemented")
}

func RegisterMyIDServer(s *grpc.Server, srv MyIDServer) {
	s.RegisterService(&_MyID_serviceDesc, srv)
}

func _MyID_GenerateID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IDRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MyIDServer).GenerateID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/schemes.MyID/GenerateID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MyIDServer).GenerateID(ctx, req.(*IDRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _MyID_serviceDesc = grpc.ServiceDesc{
	ServiceName: "schemes.MyID",
	HandlerType: (*MyIDServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GenerateID",
			Handler:    _MyID_GenerateID_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "my_id.proto",
}
